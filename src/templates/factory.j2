#ifndef _SVD_2_CPP_OBJECTS_{{NAME}}_INCLUDE_HPP_
#define _SVD_2_CPP_OBJECTS_{{NAME}}_INCLUDE_HPP_

{% for peripheral in peripherals.peripheral %}
#include "{{peripheral.name}}.hpp"
{% endfor %}

#include "PeripheralFactory.hpp"

namespace Svd2cppObjects {
namespace {{NAME}} {

{% for peripheral in peripherals.peripheral %}
const std::string {{peripheral.NAME}}name{"{{peripheral.NAME}}"};
{% endfor %}

{% for peripheral in peripherals.peripheral %}
static auto {{peripheral.NAME}}instance = {{peripheral.NAME}}peripheral::{{peripheral.NAME}}peripheral{0};
{% endfor %}

static void registerPeripherals() {
{% for peripheral in peripherals.peripheral %}
    PeripheralFactory::instance()->registerPeripheral({{peripheral.NAME}}name, reinterpret_cast<{{peripheral.NAME}}peripheral::{{peripheral.NAME}}peripheral*>(&{{peripheral.NAME}}instance));
{% endfor %}
}

} // namespace {{NAME}}
} // namespace Svd2cppObjects

#endif  // _SVD_2_CPP_OBJECTS_{{NAME}}_INCLUDE_HPP_