#ifndef _SVD_2_CPP_OBJECTS_{{NAME}}_INCLUDE_HPP_
#define _SVD_2_CPP_OBJECTS_{{NAME}}_INCLUDE_HPP_

{% for peripheral in peripherals.peripheral %}
#include "{{peripheral.name}}.hpp"
{% endfor %}

#include "PeripheralFactory.hpp"

namespace Svd2cppObjects {
namespace {{NAME}} {

static void registerPeripherals() {
{% for peripheral in peripherals.peripheral %}
{% if attr_derivedFrom is not defined %}
    const std::string {{peripheral.NAME}}_name{"{{peripheral.NAME}}"};
    auto {{peripheral.NAME}}_ptr = new  (0) Svd2cppObjects::{{peripheral.NAME}}_n::{{peripheral.NAME}}_p{0}; 
    Svd2cppObjects::PeripheralFactory::instance()->registerPeripheral({{peripheral.NAME}}_name, reinterpret_cast<Svd2cppObjects::{{peripheral.NAME}}_n::{{peripheral.NAME}}_p*>(&{{peripheral.NAME}}_ptr));
{% endif %}

{% endfor %}
}

} // namespace {{NAME}}
} // namespace Svd2cppObjects

#endif  // _SVD_2_CPP_OBJECTS_{{NAME}}_INCLUDE_HPP_